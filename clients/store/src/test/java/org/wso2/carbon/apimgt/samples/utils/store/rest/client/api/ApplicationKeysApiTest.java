/*
 * WSO2 API Manager - Store
 * This specifies a **RESTful API** for WSO2 **API Manager** - Store.  Please see [full swagger definition](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.1.66/components/apimgt/org.wso2.carbon.apimgt.rest.api.store/src/main/resources/store-api.yaml) of the API which is written using [swagger 2.0](http://swagger.io/) specification. 
 *
 * OpenAPI spec version: 0.11.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.carbon.apimgt.samples.utils.store.rest.client.api;

import org.wso2.carbon.apimgt.samples.utils.store.rest.client.ApiException;
import org.wso2.carbon.apimgt.samples.utils.store.rest.client.model.ApplicationKey;
import org.wso2.carbon.apimgt.samples.utils.store.rest.client.model.Error;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ApplicationKeysApi
 */
@Ignore
public class ApplicationKeysApiTest {

    private final ApplicationKeysApi api = new ApplicationKeysApi();

    
    /**
     * Get key details of a given type 
     *
     * This operation can be used to retrieve key details of an individual application specifying the key type in the URI. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void applicationsApplicationIdKeysKeyTypeGetTest() throws ApiException {
        String applicationId = null;
        String keyType = null;
        String groupId = null;
        String accept = null;
        ApplicationKey response = api.applicationsApplicationIdKeysKeyTypeGet(applicationId, keyType, groupId, accept);

        // TODO: test validations
    }
    
    /**
     * Update grant types and callback url of an application 
     *
     * This operation can be used to update grant types and callback url of an application. (Consumer Key and Consumer Secret are ignored) Upon succesfull you will retrieve the updated key details as the response. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void applicationsApplicationIdKeysKeyTypePutTest() throws ApiException {
        String applicationId = null;
        String keyType = null;
        ApplicationKey body = null;
        ApplicationKey response = api.applicationsApplicationIdKeysKeyTypePut(applicationId, keyType, body);

        // TODO: test validations
    }
    
}
