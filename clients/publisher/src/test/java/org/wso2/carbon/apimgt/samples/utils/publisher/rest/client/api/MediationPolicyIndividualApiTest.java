/*
 * WSO2 API Manager - Publisher API
 * This specifies a **RESTful API** for WSO2 **API Manager** - Publisher.  Please see [full swagger definition](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.1.66/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher/src/main/resources/publisher-api.yaml) of the API which is written using [swagger 2.0](http://swagger.io/) specification. 
 *
 * OpenAPI spec version: 0.11.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.carbon.apimgt.samples.utils.publisher.rest.client.api;

import org.wso2.carbon.apimgt.samples.utils.publisher.rest.client.ApiException;
import org.wso2.carbon.apimgt.samples.utils.publisher.rest.client.model.Error;
import org.wso2.carbon.apimgt.samples.utils.publisher.rest.client.model.Mediation;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MediationPolicyIndividualApi
 */
@Ignore
public class MediationPolicyIndividualApiTest {

    private final MediationPolicyIndividualApi api = new MediationPolicyIndividualApi();

    
    /**
     * Delete an API specific mediation policy
     *
     * This operation can be used to delete an existing API specific mediation policy providing the Id of the API and the Id of the mediation policy. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdPoliciesMediationMediationPolicyIdDeleteTest() throws ApiException {
        String apiId = null;
        String mediationPolicyId = null;
        String ifMatch = null;
        String ifUnmodifiedSince = null;
        api.apisApiIdPoliciesMediationMediationPolicyIdDelete(apiId, mediationPolicyId, ifMatch, ifUnmodifiedSince);

        // TODO: test validations
    }
    
    /**
     * Get an API specific mediation policy
     *
     * This operation can be used to retrieve a particular API specific mediation policy. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdPoliciesMediationMediationPolicyIdGetTest() throws ApiException {
        String apiId = null;
        String mediationPolicyId = null;
        String accept = null;
        String ifNoneMatch = null;
        String ifModifiedSince = null;
        Mediation response = api.apisApiIdPoliciesMediationMediationPolicyIdGet(apiId, mediationPolicyId, accept, ifNoneMatch, ifModifiedSince);

        // TODO: test validations
    }
    
    /**
     * Update an API specific mediation policy
     *
     * This operation can be used to update an existing mediation policy of an API. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void apisApiIdPoliciesMediationMediationPolicyIdPutTest() throws ApiException {
        String apiId = null;
        String mediationPolicyId = null;
        Mediation body = null;
        String contentType = null;
        String ifMatch = null;
        String ifUnmodifiedSince = null;
        Mediation response = api.apisApiIdPoliciesMediationMediationPolicyIdPut(apiId, mediationPolicyId, body, contentType, ifMatch, ifUnmodifiedSince);

        // TODO: test validations
    }
    
}
