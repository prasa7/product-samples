/*
 * WSO2 API Manager - Admin
 * This document specifies a **RESTful API** for WSO2 **API Manager** - Admin Portal. Please see [full swagger definition](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.1.66/components/apimgt/org.wso2.carbon.apimgt.rest.api.admin/src/main/resources/admin-api.yaml) of the API which is written using [swagger 2.0](http://swagger.io/) specification. 
 *
 * OpenAPI spec version: 0.11.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package org.wso2.carbon.apimgt.samples.utils.admin.rest.client.api;

import org.wso2.carbon.apimgt.samples.utils.admin.rest.client.ApiException;
import org.wso2.carbon.apimgt.samples.utils.admin.rest.client.model.Error;
import org.wso2.carbon.apimgt.samples.utils.admin.rest.client.model.Mediation;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MediationPolicyIndividualApi
 */
@Ignore
public class MediationPolicyIndividualApiTest {

    private final MediationPolicyIndividualApi api = new MediationPolicyIndividualApi();

    
    /**
     * Delete a global mediation policy
     *
     * This operation can be used to delete an existing global mediation policy providing the Id of the mediation policy. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void policiesMediationMediationPolicyIdDeleteTest() throws ApiException {
        String mediationPolicyId = null;
        String ifMatch = null;
        String ifUnmodifiedSince = null;
        api.policiesMediationMediationPolicyIdDelete(mediationPolicyId, ifMatch, ifUnmodifiedSince);

        // TODO: test validations
    }
    
    /**
     * Get a global mediation policy
     *
     * This operation can be used to retrieve a particular global mediation policy. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void policiesMediationMediationPolicyIdGetTest() throws ApiException {
        String mediationPolicyId = null;
        String accept = null;
        String ifNoneMatch = null;
        String ifModifiedSince = null;
        Mediation response = api.policiesMediationMediationPolicyIdGet(mediationPolicyId, accept, ifNoneMatch, ifModifiedSince);

        // TODO: test validations
    }
    
    /**
     * Update a global mediation policy
     *
     * This operation can be used to update an existing global mediation policy. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void policiesMediationMediationPolicyIdPutTest() throws ApiException {
        String mediationPolicyId = null;
        Mediation body = null;
        String contentType = null;
        String ifMatch = null;
        String ifUnmodifiedSince = null;
        Mediation response = api.policiesMediationMediationPolicyIdPut(mediationPolicyId, body, contentType, ifMatch, ifUnmodifiedSince);

        // TODO: test validations
    }
    
}
